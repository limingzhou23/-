1.1二叉搜索树
BST 非空左子树所有键值小于根结点的键值
     非空有字数的所有键值大于根结点的键值
     左右子树都是二叉搜索树

特别函数：position find
         从根结点开始，树空就返回
         若查找数字大于根结点 在右子树查找 小则在左子树查找
         
         这样的思路是尾递归 尾递归函数都可以改为迭代函数 因为非递归函数效率高
         
         查找最大元素和最小元素
        沿着右/左方向前进
        
        二叉搜索树的插入:关键是找到元素应插入的位置
        
        二叉搜索树的删除：叶结点：直接删除 父节点孩子
                         一个儿子的父节点
                         二个儿子的父节点 ：取右子树的最小元素
                                          取左子树中的最大元素 
                                          好处是这两种结点都只有一个儿子
      
         
1.2 平衡二叉树
搜索树结点不同插入次序，将导致不同的深度和平均查找长度 ASL

平衡因子 BF BF(T)=hl-hr
平衡二叉树：空树，或者|BF(T)|<=1

和斐波那契数列的关系 n(h)=F(h+2)-1

平衡二叉树的调整：；RR旋转
                  LL旋转
                  LR旋转
                  RL旋转
                  核心是观察被破环结点和插入结点之间的关系
                      同时保证二叉树还是二叉搜索树
